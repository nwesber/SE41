1. Why is software testing important?
  Software Testing is necessary because we all make mistakes. Some of those mistakes are unimportant, but some of them are expensive or dangerous. We also need to check everything and anything we produce because things can always go wrong. It’s very important since it makes sure of the customer’s reliability and their satisfaction in the application.

2. Can we test everything?
  No, we can't test everything because there are many factors in that we have to consider. If we can test everything then there should not be
  a corrupt government or accidents that occur on a daily basis. Not everything can be tested we have to consider the human nature of things
  that change is constant.

3. Is it better to use manual or automated testing?
  It really depends on your application if you are going to use manual or automated test. If you have a big scale application that process and stores a lot of sensitive data it is better to use a trusted automated testing tool to conserve time and effort on the other hand if you have a small scale application and have limited resources it is advicable to use manual testing to save resoucres and still have a good application
  that will meet your clients request.

4. Does a developer do testing? Why or why not?
  Developer can also do the testing on his part first before letting the software tester do theirs because some times it is better to
  have some one else do the testing rather than the developer because they might find something that even the developer couldn't see.
  It better if the developer do the inital test then he passes it to the software tester for the final test like a game
  where the application is you and you have to go through obstacles to reach the goal.

5. What is the Pareto principle?
  It's the 80-20 principle where every 80% of the effect come from the 20% of the cause. In software testing by fixing the top 20% of the most reported bugs, 80% of the related errors and crashes in a give system would be eliminated. This a good principle to observe because by listing
  the top bugs we can save more time and effort that doing every single bugs that are related to each other.

6. Explain the effect of not finding a bug early on in development in terms of cost.
  By not finding a bug early on in development the team will suffer the cost in the end because a single bug can cause an entire application to malfunction. The effects of it the team or company will spend a lot more resources to fix those bugs and delay the their scheduling which will result for the client to be unsatisfied as of the result of that there will be bad reviews for the company that will cost their reputation.

7. What is regression testing?
  Regression testing is type of test where we check all the previous feature of the application should be working when we add another feature the changes the old one. It is a test to ensure that everything is still working such as that new features would not introduce new faults.
  It is very important to do this because in a large scale application a new feature can result a new bug that can branch out and your application may suffer.

8. What is the role of software tester?
  The role of a software tester is that he is capable of designing test suites and should have the ability to understand usability issues. Such a tester is expected have a sound knowledge of software design and test execution methodologies. It is very important for a software tester to have great communication skills so that he can interact with the development team efficiently.

9. What is the difference between Validation and Verification?
  The difference between validation and verification is that validation is the process of checking whether the specification captures the customers needs, while verification is the process of checking that the software meets the specification. Verification includes all activites associated with the producing high quality software testing while validation is an extremely subjective process of how well the system address a real-world need.

10. What is the V-Model?
  It a high rish high reward model in where the team meets the customer expectations. It is a V-shaped life cycle where it is a sequential path of execution of process. Each phase must be completed before the next phase begins. Testing of the product is planned in parallel with a corresponding phase of development. High confidence of a customer is required for choosing V-Model approach since no protoypes are produced.
